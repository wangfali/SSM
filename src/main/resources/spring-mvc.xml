<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
       1>自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter
       2>提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven/>
    <!-- 2.静态资源默认servlet配置
         1 加入对静态资源的处理：js,gif,png,pdf
         2 允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--将service事务交个Spring去扫描-->
    <context:component-scan base-package="com.werner.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>


    <!--文件上传-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
     <!--添加注解驱动-->
    <mvc:annotation-driven />
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!--避免IE执行AJAX时，返回JSON出现下载文件,指定字符集-->
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
                <property name="fastJsonConfig">
                    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                        <!--指定默认输出的日期格式-->
                        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
                        <!--序列化对象配置-->
                        <property name="serializerFeatures">
                            <array>
                                <!--输出key时是否使用双引号，默认为true-->
                                <value>QuoteFieldNames</value>
                                <!--将JavaBean序列化为带格式的JSON文本-->
                                <value>PrettyFormat</value>
                                <!--是否输出值为null的字段，默认为false-->
                                <value>WriteMapNullValue</value>
                                <!--List字段若为null，输出[]，而非null-->
                                <value>WriteNullListAsEmpty</value>
                                <!--数值字段若为null，输出0，而非null-->
                                <value>WriteNullNumberAsZero</value>
                                <!--字符类型字段若为null，输出”“，而非null-->
                                <value>WriteNullStringAsEmpty</value>
                                <!--Boolean字段若为null，输出false，而非null-->
                                <value>WriteNullBooleanAsFalse</value>
                                <!--日期格式化-->
                                <value>WriteDateUseDateFormat</value>
                            </array>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>