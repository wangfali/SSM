<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.werner.ssm.mapper.UserMapper"就是com.werner.ssm.mapper(包名)+UserMapper(UserMapper.xml文件去除后缀)
-->
<mapper namespace="com.werner.ssm.mapper.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
  使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
  resultType="com.werner.ssm.domain.entity.User"就表示将查询结果封装成一个User类的对象返回
  User类就是users表所对应的实体类
  -->
    <!--
     根据id查询得到一个user对象
   -->
    <select id="getUser" parameterType="int"
            resultType="User">
        SELECT
            t.USER_ID,
            t.AGE,
            t.PASSWORD,
            t.NAME
        FROM TB_USER t
        WHERE USER_ID = #{id}
    </select>
    <!-- 创建用户(Create) -->
    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO TB_USER (NAME, PASSWORD, AGE)
        VALUES (#{name}, #{password}, #{age})
    </insert>
    <!-- 删除用户(Remove) -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM users
        WHERE id = #{id}
    </delete>
    <!-- 修改用户(Update) -->
    <update id="updateUser" parameterType="User">
        UPDATE users
        SET name = #{name}, age = #{age}
        WHERE id = #{id}
    </update>
    <!-- 查询全部用户-->
    <select id="getAllUsers" resultType="User">
        SELECT *
        FROM users
    </select>
</mapper>

